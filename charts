import pandas_datareader.data as pdr
import datetime
import matplotlib.pyplot as plt
import numpy as np
get_ipython().run_line_magic('matplotlib', 'inline')

start = datetime.datetime(2010, 1, 1)
end = datetime.datetime(2022, 1, 1)


ms = pdr.DataReader('MS', 'yahoo', start, end)
jpm = pdr.DataReader('JPM', 'yahoo', start, end)
gs = pdr.DataReader('GS', 'yahoo', start, end)

ms.to_csv('Morgan_Stanley_Stock.csv')
jpm.to_csv('JP_Morgan_Stock.csv')
gs.to_csv('Goldman_Sachs_Stock.csv')

# Stock Prices
ms['Open'].plot(figsize=(15,7), label='Morgan Stanley Prices')
jpm['Open'].plot(label='JPMorgan Prices')
gs['Open'].plot(label='Goldman Sachs Prices')
plt.ylabel('Price')
plt.title('Stock Prices of Morgan Stanley, JPMorgan and Goldman Sachs', size=16)
plt.grid(axis = 'y', alpha = 1)
plt.grid(axis = 'x', alpha = 1)
plt.rcParams['axes.axisbelow'] = True
plt.legend()
plt.show()

# Volume
ms['Volume'].plot(figsize=(15,7), label='Morgan Stanley')
jpm['Volume'].plot(label='JPMorgan')
gs['Volume'].plot(label='Goldman Sachs')
plt.legend()
plt.title('Volume of Morgan Stanley, JPMorgan and Goldman Sachs', size=16)
plt.grid('y', alpha=1)
plt.grid('x', alpha=1)
plt.rcParams['axes.axisbelow'] = True
plt.show()

# Total Traded
ms['Total Traded'] = ms['Open']*ms['Volume']
jpm['Total Traded'] = jpm['Open']*jpm['Volume']
gs['Total Traded'] = gs['Open']*gs['Volume']

ms['Total Traded'].plot(figsize=(15,7), label='Morgan Stanley')
jpm['Total Traded'].plot(label='JPMorgan')
gs['Total Traded'].plot(label='Goldman Sachs')
plt.title('Total Traded of Morgan Stanley, JPMorgan and Goldman Sachs', size=16)
plt.grid('y', alpha=1)
plt.grid('x', alpha=1)
plt.rcParams['axes.axisbelow'] = True
plt.legend()
plt.show()

# Moving Averages
gs['Open'].plot(figsize=(15,7), label='Goldman Sachs', c='orange')
plt.title('Goldman Sachs Stock Prices', size=16)

gs['50MA']=gs['Open'].rolling(50).mean()
gs['200MA']=gs['Open'].rolling(200).mean()

gs['50MA'].plot(label='50MA', c='green')
gs['200MA'].plot(label='200MA', c='black')
plt.grid('y', alpha=1)
plt.grid('x', alpha=1)
plt.ylabel('Price')
plt.rcParams['axes.axisbelow'] = True
plt.legend()
plt.show()

from pandas.plotting import scatter_matrix
import pandas as pd

investments_funds=pd.concat([ms['Open'], jpm['Open'], gs['Open']], axis = 1)
investments_funds.columns=['Morgan Stanley Open', 'JPMorgan Open', 'Goldman Sachs Open']

scatter_matrix(investments_funds, figsize=(8,8), hist_kwds={'bins':50})
plt.show()

# Daily Change
ms['Daily_Change']=(ms['Close']/ms['Close'].shift(1)) - 1
jpm['Daily_Change']=(jpm['Close']/jpm['Close'].shift(1)) - 1
gs['Daily_Change']=(gs['Close']/gs['Close'].shift(1)) - 1

ms['Daily_Change'].hist(bins=50, figsize=(13,6), label='Morgan Stanley')
jpm['Daily_Change'].hist(bins=50, label='JPMorgan')
gs['Daily_Change'].hist(bins=50, label="Goldman Sachs")
plt.legend()
plt.title('Return on Morgan Stanley, JPMorgan and Goldman Sachs', size=16)
plt.rcParams['axes.axisbelow'] = True
plt.show()

ms['Daily_Change'].plot(figsize=(15,7), kind='kde', label='Morgan Stanley')
jpm['Daily_Change'].plot(figsize=(15,7), kind='kde', label='JPMorgan')
gs['Daily_Change'].plot(figsize=(15,7), kind='kde', label='Goldman Sachs')
plt.legend()
plt.title('Return on Morgan Stanley, JPMorgan and Goldmansachs', size=16)
plt.grid('y', alpha=1)
plt.grid('x', alpha=1)
plt.rcParams['axes.axisbelow'] = True
plt.show()

box_df= pd.concat([ms['Daily_Change'], jpm['Daily_Change'], gs['Daily_Change']], keys=['Morgan Stanley Returns', 'JPMorgan Returns', 'Goldman Sachs Returns'], axis=1)
box_df.plot(figsize=(15,7), kind='box')
plt.show()

scatter_matrix(box_df, figsize=(8,8), hist_kwds={'bins':50}, alpha=0.25)
plt.show()

# Cumulative Return
ms['Cumulative Return'] = (1+ms['Daily_Change']).cumprod()
jpm['Cumulative Return'] = (1+jpm['Daily_Change']).cumprod()
gs['Cumulative Return'] = (1+gs['Daily_Change']).cumprod()

ms['Cumulative Return'].plot(figsize=(15,7), label='Morgan Stanley')
jpm['Cumulative Return'].plot(label='JPMorgan')
gs['Cumulative Return'].plot(label='Goldman Sachs')
plt.legend()
plt.title('Cumulative Return on Morgan Stanley, JPMorgan and Goldman Sachs', size=16)
plt.grid('y')
plt.grid('x')
plt.show()








